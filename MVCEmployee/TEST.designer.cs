#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCEmployee
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TEST")]
	public partial class TESTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBLLOCATION(TBLLOCATION instance);
    partial void UpdateTBLLOCATION(TBLLOCATION instance);
    partial void DeleteTBLLOCATION(TBLLOCATION instance);
    partial void InsertTBLSKILL(TBLSKILL instance);
    partial void UpdateTBLSKILL(TBLSKILL instance);
    partial void DeleteTBLSKILL(TBLSKILL instance);
    partial void InsertTBLEMPLOYEE(TBLEMPLOYEE instance);
    partial void UpdateTBLEMPLOYEE(TBLEMPLOYEE instance);
    partial void DeleteTBLEMPLOYEE(TBLEMPLOYEE instance);
    #endregion
		
		public TESTDataContext() : 
				base(global::MVCEmployee.Properties.Settings.Default.TESTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TESTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TESTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TESTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TESTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBLLOCATION> TBLLOCATIONs
		{
			get
			{
				return this.GetTable<TBLLOCATION>();
			}
		}
		
		public System.Data.Linq.Table<TBLSKILL> TBLSKILLs
		{
			get
			{
				return this.GetTable<TBLSKILL>();
			}
		}
		
		public System.Data.Linq.Table<TBLEMPLOYEE> TBLEMPLOYEEs
		{
			get
			{
				return this.GetTable<TBLEMPLOYEE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLLOCATION")]
	public partial class TBLLOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_LOC_ID;
		
		private string _LOCATION;
		
		private System.Nullable<int> _ISACTIVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_LOC_IDChanging(int value);
    partial void OnPK_LOC_IDChanged();
    partial void OnLOCATIONChanging(string value);
    partial void OnLOCATIONChanged();
    partial void OnISACTIVEChanging(System.Nullable<int> value);
    partial void OnISACTIVEChanged();
    #endregion
		
		public TBLLOCATION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_LOC_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_LOC_ID
		{
			get
			{
				return this._PK_LOC_ID;
			}
			set
			{
				if ((this._PK_LOC_ID != value))
				{
					this.OnPK_LOC_IDChanging(value);
					this.SendPropertyChanging();
					this._PK_LOC_ID = value;
					this.SendPropertyChanged("PK_LOC_ID");
					this.OnPK_LOC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION", DbType="NVarChar(50)")]
		public string LOCATION
		{
			get
			{
				return this._LOCATION;
			}
			set
			{
				if ((this._LOCATION != value))
				{
					this.OnLOCATIONChanging(value);
					this.SendPropertyChanging();
					this._LOCATION = value;
					this.SendPropertyChanged("LOCATION");
					this.OnLOCATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISACTIVE", DbType="Int")]
		public System.Nullable<int> ISACTIVE
		{
			get
			{
				return this._ISACTIVE;
			}
			set
			{
				if ((this._ISACTIVE != value))
				{
					this.OnISACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ISACTIVE = value;
					this.SendPropertyChanged("ISACTIVE");
					this.OnISACTIVEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLSKILL")]
	public partial class TBLSKILL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_SKILL_ID;
		
		private string _SKILL_NAME;
		
		private System.Nullable<int> _ISACTIVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_SKILL_IDChanging(int value);
    partial void OnPK_SKILL_IDChanged();
    partial void OnSKILL_NAMEChanging(string value);
    partial void OnSKILL_NAMEChanged();
    partial void OnISACTIVEChanging(System.Nullable<int> value);
    partial void OnISACTIVEChanged();
    #endregion
		
		public TBLSKILL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_SKILL_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_SKILL_ID
		{
			get
			{
				return this._PK_SKILL_ID;
			}
			set
			{
				if ((this._PK_SKILL_ID != value))
				{
					this.OnPK_SKILL_IDChanging(value);
					this.SendPropertyChanging();
					this._PK_SKILL_ID = value;
					this.SendPropertyChanged("PK_SKILL_ID");
					this.OnPK_SKILL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKILL_NAME", DbType="NVarChar(200)")]
		public string SKILL_NAME
		{
			get
			{
				return this._SKILL_NAME;
			}
			set
			{
				if ((this._SKILL_NAME != value))
				{
					this.OnSKILL_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SKILL_NAME = value;
					this.SendPropertyChanged("SKILL_NAME");
					this.OnSKILL_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISACTIVE", DbType="Int")]
		public System.Nullable<int> ISACTIVE
		{
			get
			{
				return this._ISACTIVE;
			}
			set
			{
				if ((this._ISACTIVE != value))
				{
					this.OnISACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ISACTIVE = value;
					this.SendPropertyChanged("ISACTIVE");
					this.OnISACTIVEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLEMPLOYEE")]
	public partial class TBLEMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_EMP_ID;
		
		private string _EMP_NAME;
		
		private System.Nullable<decimal> _AGE;
		
		private string _MARTIAL_STATUS;
		
		private System.Nullable<int> _LOCATION;
		
		private System.Nullable<decimal> _SALARY;
		
		private string _USER_ID;
		
		private System.Nullable<int> _ISACTIVE;
		
		private string _PASSWORD;
		
		private string _CREATED_BY;
		
		private System.Nullable<System.DateTime> _CREATED_DATE;
		
		private System.Nullable<int> _SKILL_ID;
		
		private string _RELEVANT_EXPR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_EMP_IDChanging(int value);
    partial void OnPK_EMP_IDChanged();
    partial void OnEMP_NAMEChanging(string value);
    partial void OnEMP_NAMEChanged();
    partial void OnAGEChanging(System.Nullable<decimal> value);
    partial void OnAGEChanged();
    partial void OnMARTIAL_STATUSChanging(string value);
    partial void OnMARTIAL_STATUSChanged();
    partial void OnLOCATIONChanging(System.Nullable<int> value);
    partial void OnLOCATIONChanged();
    partial void OnSALARYChanging(System.Nullable<decimal> value);
    partial void OnSALARYChanged();
    partial void OnUSER_IDChanging(string value);
    partial void OnUSER_IDChanged();
    partial void OnISACTIVEChanging(System.Nullable<int> value);
    partial void OnISACTIVEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnCREATED_BYChanging(string value);
    partial void OnCREATED_BYChanged();
    partial void OnCREATED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_DATEChanged();
    partial void OnSKILL_IDChanging(System.Nullable<int> value);
    partial void OnSKILL_IDChanged();
    partial void OnRELEVANT_EXPRChanging(string value);
    partial void OnRELEVANT_EXPRChanged();
    #endregion
		
		public TBLEMPLOYEE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_EMP_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_EMP_ID
		{
			get
			{
				return this._PK_EMP_ID;
			}
			set
			{
				if ((this._PK_EMP_ID != value))
				{
					this.OnPK_EMP_IDChanging(value);
					this.SendPropertyChanging();
					this._PK_EMP_ID = value;
					this.SendPropertyChanged("PK_EMP_ID");
					this.OnPK_EMP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_NAME", DbType="NVarChar(100)")]
		public string EMP_NAME
		{
			get
			{
				return this._EMP_NAME;
			}
			set
			{
				if ((this._EMP_NAME != value))
				{
					this.OnEMP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._EMP_NAME = value;
					this.SendPropertyChanged("EMP_NAME");
					this.OnEMP_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AGE", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> AGE
		{
			get
			{
				return this._AGE;
			}
			set
			{
				if ((this._AGE != value))
				{
					this.OnAGEChanging(value);
					this.SendPropertyChanging();
					this._AGE = value;
					this.SendPropertyChanged("AGE");
					this.OnAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARTIAL_STATUS", DbType="NVarChar(50)")]
		public string MARTIAL_STATUS
		{
			get
			{
				return this._MARTIAL_STATUS;
			}
			set
			{
				if ((this._MARTIAL_STATUS != value))
				{
					this.OnMARTIAL_STATUSChanging(value);
					this.SendPropertyChanging();
					this._MARTIAL_STATUS = value;
					this.SendPropertyChanged("MARTIAL_STATUS");
					this.OnMARTIAL_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION", DbType="Int")]
		public System.Nullable<int> LOCATION
		{
			get
			{
				return this._LOCATION;
			}
			set
			{
				if ((this._LOCATION != value))
				{
					this.OnLOCATIONChanging(value);
					this.SendPropertyChanging();
					this._LOCATION = value;
					this.SendPropertyChanged("LOCATION");
					this.OnLOCATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALARY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SALARY
		{
			get
			{
				return this._SALARY;
			}
			set
			{
				if ((this._SALARY != value))
				{
					this.OnSALARYChanging(value);
					this.SendPropertyChanging();
					this._SALARY = value;
					this.SendPropertyChanged("SALARY");
					this.OnSALARYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="NVarChar(50)")]
		public string USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISACTIVE", DbType="Int")]
		public System.Nullable<int> ISACTIVE
		{
			get
			{
				return this._ISACTIVE;
			}
			set
			{
				if ((this._ISACTIVE != value))
				{
					this.OnISACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ISACTIVE = value;
					this.SendPropertyChanged("ISACTIVE");
					this.OnISACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(100)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_BY", DbType="NVarChar(50)")]
		public string CREATED_BY
		{
			get
			{
				return this._CREATED_BY;
			}
			set
			{
				if ((this._CREATED_BY != value))
				{
					this.OnCREATED_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATED_BY = value;
					this.SendPropertyChanged("CREATED_BY");
					this.OnCREATED_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_DATE
		{
			get
			{
				return this._CREATED_DATE;
			}
			set
			{
				if ((this._CREATED_DATE != value))
				{
					this.OnCREATED_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATED_DATE = value;
					this.SendPropertyChanged("CREATED_DATE");
					this.OnCREATED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKILL_ID", DbType="Int")]
		public System.Nullable<int> SKILL_ID
		{
			get
			{
				return this._SKILL_ID;
			}
			set
			{
				if ((this._SKILL_ID != value))
				{
					this.OnSKILL_IDChanging(value);
					this.SendPropertyChanging();
					this._SKILL_ID = value;
					this.SendPropertyChanged("SKILL_ID");
					this.OnSKILL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RELEVANT_EXPR", DbType="NVarChar(50)")]
		public string RELEVANT_EXPR
		{
			get
			{
				return this._RELEVANT_EXPR;
			}
			set
			{
				if ((this._RELEVANT_EXPR != value))
				{
					this.OnRELEVANT_EXPRChanging(value);
					this.SendPropertyChanging();
					this._RELEVANT_EXPR = value;
					this.SendPropertyChanged("RELEVANT_EXPR");
					this.OnRELEVANT_EXPRChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
